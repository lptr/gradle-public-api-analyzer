name: Build Gradle project

on:
  push:

permissions:
  id-token: write
  pages: write
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout project sources
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Get Gradle version and user home
        id: gradle_info
        run: |
          INFO_OUTPUT=$(./gradlew gradleInfo)
          GRADLE_VERSION=$(echo "$INFO_OUTPUT" | grep '^GRADLE_VERSION: ' | awk '{print $2}')
          GRADLE_USER_HOME=$(echo "$INFO_OUTPUT" | grep '^GRADLE_USER_HOME: ' | awk '{print $2}')
          echo "Gradle version: $GRADLE_VERSION"
          echo "Gradle user home: $GRADLE_USER_HOME"
          echo "GRADLE_VERSION=$GRADLE_VERSION" >> $GITHUB_ENV
          echo "GRADLE_USER_HOME=$GRADLE_USER_HOME" >> $GITHUB_ENV

      - name: Generate report
        run: |
          ./gradlew app:run --args=" \
            --classpath ${{ env.GRADLE_USER_HOME }}/caches/${{ env.GRADLE_VERSION }}/generated-gradle-jars/gradle-api-${{ env.GRADLE_VERSION }}.jar \
            --output build/report/report.md \
            --title 'Provider API migration report based on Gradle ${{ env.GRADLE_VERSION }}' \
            --ignore-deprecated \
            --ignore-package org.gradle.ide \
            --ignore-package org.gradle.plugins.ide \
            --ignore-package org.gradle.nativeplatform \
            --ignore-package org.gradle.language.c \
            --ignore-package org.gradle.language.cpp \
            --ignore-package org.gradle.language.nativeplatform \
            --ignore-package org.gradle.language.objectivec \
            --ignore-package org.gradle.language.objectivecpp \
            --ignore-package org.gradle.language.rc \
            --ignore-package org.gradle.language.swift \
            --ignore-package org.gradle.api.artifacts \
            --ignore-package org.gradle.tooling \
            --ignore-package org.gradle.api.publish \
            --ignore-package org.gradle.plugins.signing \
            --ignore-type org.gradle.api.tasks.TaskInputs \
            --ignore-type org.gradle.api.tasks.TaskOutputs \
            --ignore-type org.gradle.api.model.ObjectFactory \
            --ignore-type org.gradle.api.file.FileTreeElement \
            --ignore-type org.gradle.api.file.FileCopyDetails \
          "

      - name: Make site directory
        run: |
          mkdir ./_site

      - name: Convert Markdown to HTML
        uses: jaywcjlove/markdown-to-html-cli@v4.1.0
        with:
          source: app/build/report/report.md
          output: ./_site/index.html
          github-corners: https://github.com/lptr/gradle-public-api-analyzer

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload GitHub pages
        uses: actions/upload-pages-artifact@v3

  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
